{"ast":null,"code":"var _jsxFileName = \"/Users/anzay/Desktop/ForethetaDev/recruitment-test/frontend/src/pages/Q3/Q3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Q3 = () => {\n  _s();\n  const [question] = useState(\"Q3?\");\n  const videoRef = useRef(null);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [recording, setRecording] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [maxRecordingDuration] = useState(60); // Maximum recording duration in seconds (1 minute)\n  const [timer, setTimer] = useState(0); // Timer to track elapsed recording time\n  const name = sessionStorage.getItem(\"name\");\n  const folderId = sessionStorage.getItem(\"folderId\"); // Retrieve folderId from session storage\n  const navigate = useNavigate();\n  const [intervalId, setIntervalId] = useState(null); // State to hold interval id\n\n  // Prompt user for camera access when component mounts\n  useEffect(() => {\n    document.title = \"Recruitment Test - Q3\";\n    startMediaStream();\n  }, []);\n  const startMediaStream = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      setMediaStream(stream);\n    }).catch(err => console.error(\"Error accessing media devices: \", err));\n  };\n  const startRecording = () => {\n    if (videoRef.current && !recording && mediaStream) {\n      const mediaRecorder = new MediaRecorder(mediaStream);\n      const chunks = [];\n      let timeElapsed = 0;\n      mediaRecorder.ondataavailable = e => {\n        chunks.push(e.data);\n      };\n      mediaRecorder.onstop = () => {\n        setRecordedChunks(chunks);\n        const blob = new Blob(chunks, {\n          type: \"video/mp4\"\n        });\n        const url = URL.createObjectURL(blob);\n        setRecordedVideoUrl(url);\n        setRecording(false);\n      };\n\n      // Start recording\n      mediaRecorder.start();\n      setRecording(true);\n\n      // Start timer to check elapsed time\n      const id = setInterval(() => {\n        timeElapsed += 1;\n        setTimer(timeElapsed);\n\n        // Check if maximum duration exceeded\n        if (timeElapsed >= maxRecordingDuration) {\n          clearInterval(id);\n          mediaRecorder.stop();\n          alert(\"Maximum recording duration exceeded (1 minute). Please re-record or move to the next question.\");\n        }\n      }, 1000); // Update timer every second (1000 milliseconds)\n\n      // Store interval id in state\n      setIntervalId(id);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaStream && recording) {\n      const tracks = mediaStream.getTracks();\n      tracks.forEach(track => track.stop());\n      setRecording(false);\n      setMediaStream(null);\n      clearInterval(intervalId); // Clear timer interval\n    }\n  };\n  const recordAgain = () => {\n    setRecordedVideoUrl(null);\n    setRecordedChunks([]);\n    startMediaStream();\n    setTimer(0); // Reset timer\n  };\n  const moveToNextQuestion = async () => {\n    if (recordedChunks.length > 0) {\n      setSubmitting(true);\n      const blob = new Blob(recordedChunks, {\n        type: \"video/mp4\"\n      });\n      const formData = new FormData();\n      formData.append(\"file\", blob, `${name}_q3.mp4`);\n      formData.append(\"folderId\", folderId);\n      try {\n        const response = await fetch(\"http://localhost:3001/upload-video\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (response.ok) {\n          console.log(\"Video uploaded successfully!\");\n          setSubmitting(false);\n          navigate(\"/credits\");\n        } else {\n          console.error(\"Failed to upload video:\", response.statusText);\n          setSubmitting(false);\n          alert(\"Failed to upload video. Please try again.\");\n        }\n      } catch (error) {\n        console.error(\"Error uploading video:\", error);\n        setSubmitting(false);\n        alert(\"Error uploading video. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center min-h-screen bg-gray-100 text-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [!recording && !recordedVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        className: \"border rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), recordedVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: recordedVideoUrl,\n        controls: true,\n        className: \"border rounded-lg\",\n        children: \"Your browser does not support the video tag.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4 text-sm text-gray-500\",\n      children: [\"Recording: \", timer, \" sec / \", maxRecordingDuration, \" sec\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), !recordedVideoUrl ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: recording ? stopRecording : startRecording,\n      className: `px-4 py-2 rounded-lg text-white ${recording ? \"bg-red-500 hover:bg-red-600\" : \"bg-green-500 hover:bg-green-600\"}`,\n      children: recording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: recordAgain,\n        className: \"px-4 py-2 rounded-lg text-white bg-green-500 hover:bg-green-600\",\n        children: \"Record Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: moveToNextQuestion,\n        className: \"px-4 py-2 rounded-lg text-white bg-blue-500 hover:bg-blue-600\",\n        disabled: submitting,\n        children: submitting ? \"Submitting...\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-blue-500 font-semibold\",\n      children: \"Submitting video answer... Please wait.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Q3, \"mcCZ9jesgEVojqtCZM/l9u6HW4M=\", false, function () {\n  return [useNavigate];\n});\n_c = Q3;\nexport default Q3;\nvar _c;\n$RefreshReg$(_c, \"Q3\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Q3","_s","question","videoRef","mediaStream","setMediaStream","recording","setRecording","recordedChunks","setRecordedChunks","recordedVideoUrl","setRecordedVideoUrl","submitting","setSubmitting","maxRecordingDuration","timer","setTimer","name","sessionStorage","getItem","folderId","navigate","intervalId","setIntervalId","document","title","startMediaStream","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","catch","err","console","error","startRecording","mediaRecorder","MediaRecorder","chunks","timeElapsed","ondataavailable","e","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","start","id","setInterval","clearInterval","stop","alert","stopRecording","tracks","getTracks","forEach","track","recordAgain","moveToNextQuestion","length","formData","FormData","append","response","fetch","method","body","ok","log","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","src","controls","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/anzay/Desktop/ForethetaDev/recruitment-test/frontend/src/pages/Q3/Q3.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Q3 = () => {\n  const [question] = useState(\"Q3?\");\n  const videoRef = useRef(null);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [recording, setRecording] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [maxRecordingDuration] = useState(60); // Maximum recording duration in seconds (1 minute)\n  const [timer, setTimer] = useState(0); // Timer to track elapsed recording time\n  const name = sessionStorage.getItem(\"name\");\n  const folderId = sessionStorage.getItem(\"folderId\"); // Retrieve folderId from session storage\n  const navigate = useNavigate();\n\n  const [intervalId, setIntervalId] = useState(null); // State to hold interval id\n\n  // Prompt user for camera access when component mounts\n  useEffect(() => {\n    document.title = \"Recruitment Test - Q3\";\n    startMediaStream();\n  }, []);\n\n  const startMediaStream = () => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n        setMediaStream(stream);\n      })\n      .catch((err) => console.error(\"Error accessing media devices: \", err));\n  };\n\n  const startRecording = () => {\n    if (videoRef.current && !recording && mediaStream) {\n      const mediaRecorder = new MediaRecorder(mediaStream);\n      const chunks = [];\n      let timeElapsed = 0;\n\n      mediaRecorder.ondataavailable = (e) => {\n        chunks.push(e.data);\n      };\n\n      mediaRecorder.onstop = () => {\n        setRecordedChunks(chunks);\n        const blob = new Blob(chunks, { type: \"video/mp4\" });\n        const url = URL.createObjectURL(blob);\n        setRecordedVideoUrl(url);\n        setRecording(false);\n      };\n\n      // Start recording\n      mediaRecorder.start();\n      setRecording(true);\n\n      // Start timer to check elapsed time\n      const id = setInterval(() => {\n        timeElapsed += 1;\n        setTimer(timeElapsed);\n\n        // Check if maximum duration exceeded\n        if (timeElapsed >= maxRecordingDuration) {\n          clearInterval(id);\n          mediaRecorder.stop();\n          alert(\n            \"Maximum recording duration exceeded (1 minute). Please re-record or move to the next question.\"\n          );\n        }\n      }, 1000); // Update timer every second (1000 milliseconds)\n\n      // Store interval id in state\n      setIntervalId(id);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaStream && recording) {\n      const tracks = mediaStream.getTracks();\n      tracks.forEach((track) => track.stop());\n      setRecording(false);\n      setMediaStream(null);\n      clearInterval(intervalId); // Clear timer interval\n    }\n  };\n\n  const recordAgain = () => {\n    setRecordedVideoUrl(null);\n    setRecordedChunks([]);\n    startMediaStream();\n    setTimer(0); // Reset timer\n  };\n\n  const moveToNextQuestion = async () => {\n    if (recordedChunks.length > 0) {\n      setSubmitting(true);\n      const blob = new Blob(recordedChunks, { type: \"video/mp4\" });\n      const formData = new FormData();\n      formData.append(\"file\", blob, `${name}_q3.mp4`);\n      formData.append(\"folderId\", folderId);\n\n      try {\n        const response = await fetch(\"http://localhost:3001/upload-video\", {\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (response.ok) {\n          console.log(\"Video uploaded successfully!\");\n          setSubmitting(false);\n          navigate(\"/credits\");\n        } else {\n          console.error(\"Failed to upload video:\", response.statusText);\n          setSubmitting(false);\n          alert(\"Failed to upload video. Please try again.\");\n        }\n      } catch (error) {\n        console.error(\"Error uploading video:\", error);\n        setSubmitting(false);\n        alert(\"Error uploading video. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col justify-center items-center min-h-screen bg-gray-100 text-black\">\n      <h1 className=\"text-2xl font-bold mb-4\">{question}</h1>\n      <div className=\"mb-4\">\n        {/* Show live preview until recording starts */}\n        {!recording && !recordedVideoUrl && (\n          <video ref={videoRef} autoPlay muted className=\"border rounded-lg\" />\n        )}\n        {/* Show recorded video once recording ends */}\n        {recordedVideoUrl && (\n          <video src={recordedVideoUrl} controls className=\"border rounded-lg\">\n            Your browser does not support the video tag.\n          </video>\n        )}\n      </div>\n      {/* Display timer */}\n      {recording && (\n        <div className=\"text-center mb-4 text-sm text-gray-500\">\n          Recording: {timer} sec / {maxRecordingDuration} sec\n        </div>\n      )}\n      {!recordedVideoUrl ? (\n        <button\n          onClick={recording ? stopRecording : startRecording}\n          className={`px-4 py-2 rounded-lg text-white ${\n            recording\n              ? \"bg-red-500 hover:bg-red-600\"\n              : \"bg-green-500 hover:bg-green-600\"\n          }`}\n        >\n          {recording ? \"Stop Recording\" : \"Start Recording\"}\n        </button>\n      ) : (\n        <div className=\"space-x-4\">\n          <button\n            onClick={recordAgain}\n            className=\"px-4 py-2 rounded-lg text-white bg-green-500 hover:bg-green-600\"\n          >\n            Record Again\n          </button>\n          <button\n            onClick={moveToNextQuestion}\n            className=\"px-4 py-2 rounded-lg text-white bg-blue-500 hover:bg-blue-600\"\n            disabled={submitting}\n          >\n            {submitting ? \"Submitting...\" : \"Next Question\"}\n          </button>\n        </div>\n      )}\n      {submitting && (\n        <div className=\"mt-4 text-blue-500 font-semibold\">\n          Submitting video answer... Please wait.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Q3;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}