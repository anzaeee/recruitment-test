{"ast":null,"code":"var _jsxFileName = \"/Users/anzay/Desktop/ForethetaDev/recruitment-test/src/pages/Q1/Q1.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ReactMediaRecorder } from \"react-media-recorder\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoPreview = ({\n  stream\n}) => {\n  _s();\n  const videoRef = useRef < HTMLVideoElement > null;\n  useEffect(() => {\n    if (videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n  if (!stream) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    width: 500,\n    height: 500,\n    autoPlay: true,\n    controls: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n_s(VideoPreview, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VideoPreview;\nconst Q1 = () => {\n  _s2();\n  const [question] = useState(\"Q1?\");\n  const [recordedVideoUrl, setRecordedVideoUrl] = useState < string | null > null;\n  const [mediaStream, setMediaStream] = useState < MediaStream | null > null;\n  const navigate = useNavigate();\n  const handleStopRecording = (blobUrl, blob) => {\n    setRecordedVideoUrl(blobUrl);\n    uploadVideoToDrive(blob);\n  };\n  const recordAgain = () => {\n    setRecordedVideoUrl(null);\n  };\n  const moveToNextQuestion = () => {\n    navigate(\"/q2\");\n  };\n  const uploadVideoToDrive = async videoBlob => {\n    try {\n      const formData = new FormData();\n      formData.append(\"video\", videoBlob, \"recorded-video.webm\");\n      const response = await fetch(\"http://localhost:3001/api/upload-video\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"Video uploaded successfully!\");\n        // Optionally handle response from server\n      } else {\n        console.error(\"Failed to upload video:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center min-h-screen bg-gray-100 text-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [!recordedVideoUrl && /*#__PURE__*/_jsxDEV(ReactMediaRecorder, {\n        video: true,\n        onStop: handleStopRecording,\n        render: ({\n          startRecording,\n          stopRecording,\n          mediaBlobUrl,\n          previewStream\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(VideoPreview, {\n            stream: previewStream\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (previewStream) {\n                if (mediaStream) {\n                  stopRecording();\n                  setMediaStream(null);\n                } else {\n                  startRecording();\n                  setMediaStream(previewStream);\n                }\n              }\n            },\n            className: `px-4 py-2 rounded-lg text-white ${mediaStream ? \"bg-red-500 hover:bg-red-600\" : \"bg-green-500 hover:bg-green-600\"}`,\n            children: mediaStream ? \"Stop Recording\" : \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), recordedVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: recordedVideoUrl,\n        controls: true,\n        className: \"border rounded-lg\",\n        children: \"Your browser does not support the video tag.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), recordedVideoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: recordAgain,\n        className: \"px-4 py-2 rounded-lg text-white bg-green-500 hover:bg-green-600\",\n        children: \"Record Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: moveToNextQuestion,\n        className: \"px-4 py-2 rounded-lg text-white bg-blue-500 hover:bg-blue-600\",\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(Q1, \"ATVCtoQEuBOh1SJzX74DnlA1vLw=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Q1;\nexport default Q1;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoPreview\");\n$RefreshReg$(_c2, \"Q1\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","ReactMediaRecorder","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPreview","stream","_s","videoRef","HTMLVideoElement","current","srcObject","ref","width","height","autoPlay","controls","fileName","_jsxFileName","lineNumber","columnNumber","_c","Q1","_s2","question","recordedVideoUrl","setRecordedVideoUrl","string","mediaStream","setMediaStream","MediaStream","navigate","handleStopRecording","blobUrl","blob","uploadVideoToDrive","recordAgain","moveToNextQuestion","videoBlob","formData","FormData","append","response","fetch","method","body","ok","console","log","error","statusText","className","children","video","onStop","render","startRecording","stopRecording","mediaBlobUrl","previewStream","onClick","src","_c2","$RefreshReg$"],"sources":["/Users/anzay/Desktop/ForethetaDev/recruitment-test/src/pages/Q1/Q1.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ReactMediaRecorder } from \"react-media-recorder\";\n\nconst VideoPreview = ({ stream }: { stream: MediaStream | null }) => {\n  const videoRef = useRef < HTMLVideoElement > null;\n\n  useEffect(() => {\n    if (videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n\n  if (!stream) {\n    return null;\n  }\n\n  return <video ref={videoRef} width={500} height={500} autoPlay controls />;\n};\n\nconst Q1 = () => {\n  const [question] = useState(\"Q1?\");\n  const [recordedVideoUrl, setRecordedVideoUrl] =\n    (useState < string) | (null > null);\n  const [mediaStream, setMediaStream] =\n    (useState < MediaStream) | (null > null);\n  const navigate = useNavigate();\n\n  const handleStopRecording = (blobUrl: string, blob: Blob) => {\n    setRecordedVideoUrl(blobUrl);\n    uploadVideoToDrive(blob);\n  };\n\n  const recordAgain = () => {\n    setRecordedVideoUrl(null);\n  };\n\n  const moveToNextQuestion = () => {\n    navigate(\"/q2\");\n  };\n\n  const uploadVideoToDrive = async (videoBlob: Blob) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"video\", videoBlob, \"recorded-video.webm\");\n\n      const response = await fetch(\"http://localhost:3001/api/upload-video\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        console.log(\"Video uploaded successfully!\");\n        // Optionally handle response from server\n      } else {\n        console.error(\"Failed to upload video:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col justify-center items-center min-h-screen bg-gray-100 text-black\">\n      <h1 className=\"text-2xl font-bold mb-4\">{question}</h1>\n      <div className=\"mb-4\">\n        {!recordedVideoUrl && (\n          <ReactMediaRecorder\n            video\n            onStop={handleStopRecording}\n            render={({\n              startRecording,\n              stopRecording,\n              mediaBlobUrl,\n              previewStream,\n            }) => (\n              <>\n                <VideoPreview stream={previewStream} />\n                <button\n                  onClick={() => {\n                    if (previewStream) {\n                      if (mediaStream) {\n                        stopRecording();\n                        setMediaStream(null);\n                      } else {\n                        startRecording();\n                        setMediaStream(previewStream);\n                      }\n                    }\n                  }}\n                  className={`px-4 py-2 rounded-lg text-white ${\n                    mediaStream\n                      ? \"bg-red-500 hover:bg-red-600\"\n                      : \"bg-green-500 hover:bg-green-600\"\n                  }`}\n                >\n                  {mediaStream ? \"Stop Recording\" : \"Start Recording\"}\n                </button>\n              </>\n            )}\n          />\n        )}\n        {recordedVideoUrl && (\n          <video src={recordedVideoUrl} controls className=\"border rounded-lg\">\n            Your browser does not support the video tag.\n          </video>\n        )}\n      </div>\n      {recordedVideoUrl && (\n        <div className=\"space-x-4\">\n          <button\n            onClick={recordAgain}\n            className=\"px-4 py-2 rounded-lg text-white bg-green-500 hover:bg-green-600\"\n          >\n            Record Again\n          </button>\n          <button\n            onClick={moveToNextQuestion}\n            className=\"px-4 py-2 rounded-lg text-white bg-blue-500 hover:bg-blue-600\"\n          >\n            Next Question\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Q1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}